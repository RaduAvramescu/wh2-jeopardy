{"version":3,"sources":["logo.svg","components/playerNameForm.jsx","components/player.jsx","components/players.jsx","containers/CategoryContainer.jsx","components/QuestionCell.jsx","components/Row.jsx","containers/RowContainer.jsx","components/Question.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PlayerNameForm","player1","React","createRef","player2","onSubmit","event","players","name","current","value","props","preventDefault","className","this","htmlFor","type","ref","required","placeholder","Component","Player","onIncrement","player","onDecrement","getBadgeClasses","classes","onClick","Players","map","key","id","categories","category","scope","QuestionCell","handleClick","onRandomizeQuestion","rowId","setTimeout","onShowQuestion","question","answer","onAnswered","isAnswered","cells","i","push","questions","Fragment","Row","row1","row2","row3","row4","row5","Question","style","height","showAnswer","window","addEventListener","onKeyPress","removeEventListener","App","state","data","showPlayerForm","showPlayers","showTable","showQuestion","handleRandomizeQuestion","random","Math","floor","row","newQuestions","pool","setState","handleIsAnswered","handleKeyPress","e","handleHide","console","log","handleSubmit","newPlayers","p","handleIncrement","handleDecrement","CategoryContainer","RowContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02ffe906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nexport default class PlayerNameForm extends Component {\n  player1 = React.createRef();\n  player2 = React.createRef();\n\n  onSubmit = (event) => {\n    const players = [\n      { name: this.player1.current.value },\n      { name: this.player2.current.value },\n    ];\n    this.props.onSubmit(players);\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"fade-in d-flex align-items-center min-vh-100 text-responsive\">\n        <div className=\"container\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group form-group-lg col-md-3 m-2 \">\n                <label htmlFor=\"player1\">Player 1</label>\n                <input\n                  type=\"text\"\n                  ref={this.player1}\n                  className=\"form-control input-lg\"\n                  required\n                  placeholder=\"Name\"\n                />\n              </div>\n              <div className=\"form-group col-md-3 m-2\">\n                <label htmlFor=\"player1\">Player 2</label>\n                <input\n                  type=\"text\"\n                  ref={this.player2}\n                  className=\"form-control input-lg\"\n                  required\n                  placeholder=\"Name\"\n                />\n              </div>\n              <div className=\"form-group col-md-12 m-2 text-center\">\n                <button type=\"submit\" className=\"btn btn-dark btn-lg m-2\">\n                  <div className=\"text-responsive\">SUBMIT</div>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Player extends Component {\n  onIncrement = () => {\n    this.props.onIncrement(this.props.player);\n  };\n\n  onDecrement = () => {\n    this.props.onDecrement(this.props.player);\n  };\n\n  getBadgeClasses = () => {\n    const classes = \"badge m-2 badge-\";\n    if (this.props.player.value < 0) return classes + \"danger\";\n    if (this.props.player.value === 0) return classes + \"warning\";\n    return classes + \"primary\";\n  };\n\n  render() {\n    return (\n      <div className=\"table-dark border fade-in visible\">\n        <div className=\"m-2 ml-3 mr-3\">\n          <span>{this.props.player.name}</span>\n          <span className={this.getBadgeClasses()}>\n            {this.props.player.value}\n          </span>\n          <button\n            onClick={this.onIncrement}\n            className=\"btn btn-primary btn-lg m-1\"\n          >\n            +\n          </button>\n          <button onClick={this.onDecrement} className=\"btn btn-danger btn-lg\">\n            -\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Player from \"./player\";\n\nexport default class Players extends Component {\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center fixed-bottom invisible text-responsive\">\n        {this.props.players.map((player) => (\n          <Player\n            key={player.id}\n            id={player.id}\n            onIncrement={this.props.onIncrement}\n            onDecrement={this.props.onDecrement}\n            player={player}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default (props) => (\n  <tr>\n    {props.categories.map((category) => (\n      <th scope=\"col\" className=\"cell-width align-middle\" key={category.id}>\n        {category.value}\n      </th>\n    ))}\n  </tr>\n);\n","import React, { Component } from \"react\";\n\nexport default class QuestionCell extends Component {\n  handleClick = () => {\n    this.props.onRandomizeQuestion(this.props.rowId, this.props.id);\n    setTimeout(() => {\n      this.props.onShowQuestion(\n        \"showQuestion\",\n        this.props.question.question,\n        this.props.question.answer,\n        this.props.category,\n        this.props.question.value\n      );\n      this.props.onAnswered(this.props.rowId, this.props.id);\n    }, 100);\n  };\n\n  render() {\n    if (this.props.isAnswered)\n      return (\n        <td className=\"cell-width align-middle bordered\">\n          <div className=\"opacity-10\">{this.props.question.value}</div>\n        </td>\n      );\n    return (\n      <td\n        className=\"cell-width align-middle bordered pointer\"\n        onClick={this.handleClick}\n      >\n        <div>{this.props.question.value}</div>\n      </td>\n    );\n  }\n}\n","import React from \"react\";\nimport QuestionCell from \"./QuestionCell\";\n\nexport default (props) => {\n  let cells = [];\n  for (let i = 0; i < 5; i++) {\n    cells.push(\n      <QuestionCell\n        key={i}\n        id={i}\n        rowId={props.id}\n        isAnswered={props.questions[i].isAnswered}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        question={props.questions[i]}\n        category={props.categories[i].value}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n    );\n  }\n  return <tr>{cells}</tr>;\n};\n","import React from \"react\";\nimport Row from \"../components/Row\";\n\nexport default (props) => {\n  return (\n    <React.Fragment>\n      <Row\n        key={1}\n        id={1}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        questions={props.questions.row1}\n        categories={props.categories}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n      <Row\n        key={2}\n        id={2}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        questions={props.questions.row2}\n        categories={props.categories}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n      <Row\n        key={3}\n        id={3}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        questions={props.questions.row3}\n        categories={props.categories}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n      <Row\n        key={4}\n        id={4}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        questions={props.questions.row4}\n        categories={props.categories}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n      <Row\n        key={5}\n        id={5}\n        onShowQuestion={props.onShowQuestion}\n        onAnswered={props.onAnswered}\n        questions={props.questions.row5}\n        categories={props.categories}\n        onRandomizeQuestion={props.onRandomizeQuestion}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class Question extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <nav className=\"navbar navbar-dark bg-dark justify-content-around\">\n            <span className=\"navbar-brand\">\n              Continue <kbd className=\"text-dark bg-light\">SPACE</kbd>\n            </span>\n            <span className=\"navbar-brand\">\n              {this.props.category} for {this.props.value}\n            </span>\n          </nav>\n        </div>\n        <div\n          style={{ height: \"90vh\" }}\n          className=\"container-fluid text-responsive fade-in\"\n        >\n          <div className=\"col-12 fade-in text-center mb-5 mt-5 pt-5\">\n            {this.props.question}\n          </div>\n          {this.props.showAnswer && (\n            <div className=\"col-12 fade-in text-center mb-5 mt-5 pt-5\">\n              {this.props.answer}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.props.onKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.props.onKeyPress, false);\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport data from \"./data/data.json\";\nimport \"./App.css\";\nimport PlayerNameForm from \"./components/playerNameForm\";\nimport Players from \"./components/players\";\nimport CategoryContainer from \"./containers/CategoryContainer\";\nimport RowContainer from \"./containers/RowContainer\";\nimport Question from \"./components/Question\";\n\nclass App extends Component {\n  state = {\n    players: [\n      { id: 1, value: 0, name: \"Player 1\" },\n      { id: 2, value: 0, name: \"Player 2\" },\n    ],\n    categories: [\n      { id: 1, value: \"Stats\" },\n      { id: 2, value: \"Abilities\" },\n      { id: 3, value: \"Match-Ups\" },\n      { id: 4, value: \"Maps\" },\n      { id: 5, value: \"Tournaments\" },\n    ],\n    questions: data,\n    showPlayerForm: true,\n    showPlayers: false,\n    showTable: false,\n    showQuestion: false,\n    showAnswer: false,\n  };\n\n  handleRandomizeQuestion = (rowId, id) => {\n    const random = Math.floor(Math.random() * 5);\n    const row = `row${rowId}`;\n    const newQuestions = {\n      ...this.state.questions,\n      [row]: {\n        ...this.state.questions[row],\n        [id]: {\n          ...this.state.questions[row][id],\n          question: this.state.questions[row][id].pool[random].question,\n          answer: this.state.questions[row][id].pool[random].answer,\n        },\n      },\n    };\n\n    this.setState({ questions: newQuestions });\n  };\n\n  handleIsAnswered = (rowId, id) => {\n    const row = `row${rowId}`;\n    const newQuestions = {\n      ...this.state.questions,\n      [row]: {\n        ...this.state.questions[row],\n        [id]: {\n          ...this.state.questions[row][id],\n          isAnswered: true,\n        },\n      },\n    };\n    this.setState({ questions: newQuestions });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \" \" && this.state.showQuestion) {\n      if (this.state.showAnswer) this.handleHide(\"showAnswer\");\n      else this.handleHide(\"showAnswer\");\n    }\n  };\n\n  handleHide = (name, question, answer, category, value) => {\n    switch (name) {\n      case \"showPlayerForm\":\n        this.setState({ showPlayerForm: !this.state.showPlayerForm });\n        break;\n      case \"showPlayers\":\n        this.setState({ showPlayers: !this.state.showPlayers });\n        break;\n      case \"showTable\":\n        this.setState({ showTable: !this.state.showTable });\n        break;\n      case \"showQuestion\":\n        this.setState({\n          showTable: !this.state.showTable,\n          showQuestion: !this.state.showQuestion,\n          question,\n          answer,\n          category,\n          value,\n        });\n        break;\n      case \"showAnswer\":\n        if (this.state.showQuestion) {\n          if (this.state.showAnswer) this.handleHide(\"showQuestion\");\n          this.setState({ showAnswer: !this.state.showAnswer });\n        }\n        break;\n      default:\n        console.log(\"Nothing to show/hide!\");\n        break;\n    }\n  };\n\n  handleSubmit = (players) => {\n    const newPlayers = this.state.players.map((p) => ({\n      ...p,\n      name: players[`${p.id - 1}`].name,\n    }));\n    this.setState({ players: newPlayers });\n    this.handleHide(\"showPlayerForm\");\n    this.handleHide(\"showPlayers\");\n    this.handleHide(\"showTable\");\n  };\n\n  handleIncrement = (player) => {\n    const newPlayers = this.state.players.map((p) =>\n      p !== player\n        ? p\n        : {\n            ...p,\n            value: player.value + 100,\n          }\n    );\n    this.setState({ players: newPlayers });\n  };\n\n  handleDecrement = (player) => {\n    const newPlayers = this.state.players.map((p) =>\n      p !== player\n        ? p\n        : {\n            ...p,\n            value: player.value - 100,\n          }\n    );\n    this.setState({ players: newPlayers });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.showPlayerForm && (\n          <PlayerNameForm\n            players={this.state.players}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n        {this.state.showPlayers && (\n          <Players\n            players={this.state.players}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n          />\n        )}\n        {this.state.showTable && (\n          <div className=\"container-fluid bg-light fade-in text-responsive\">\n            <table\n              style={{ height: \"90vh\" }}\n              className=\"table text-center m-0 no-collapse\"\n            >\n              <thead>\n                <CategoryContainer categories={this.state.categories} />\n              </thead>\n              <tbody className=\"table-dark\">\n                <RowContainer\n                  questions={this.state.questions}\n                  categories={this.state.categories}\n                  onShowQuestion={this.handleHide}\n                  onAnswered={this.handleIsAnswered}\n                  onRandomizeQuestion={this.handleRandomizeQuestion}\n                />\n              </tbody>\n            </table>\n          </div>\n        )}\n        {this.state.showQuestion && (\n          <Question\n            onKeyPress={this.handleKeyPress}\n            question={this.state.question}\n            answer={this.state.answer}\n            category={this.state.category}\n            value={this.state.value}\n            showAnswer={this.state.showAnswer}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}